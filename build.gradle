buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
	baseName = 'kensho'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

def defaultEncoding = 'UTF-8'

compileJava {
	options.encoding = defaultEncoding
}

compileTestJava {
	options.encoding = defaultEncoding
}

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-batch')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.projectlombok:lombok:1.16.6')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('javax.validation:validation-api:1.1.0.Final')
	compile('org.hibernate:hibernate-validator:5.2.3.Final')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('javax.el:javax.el-api:3.0.0')
	compile('com.orangesignal:orangesignal-csv:2.2.1')
    compile fileTree(dir: 'lib', include: '*.jar')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

jar {
  into('lib') {
    from 'lib'
  }
}
